sudo apt-get update && sudo apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl


# To gather all the necessary commands related to setting up container runtimes in Kubernetes into one file, you can compile them in a script file. Below is a consolidated script file that includes commands for network configuration, enabling IPv4 packet forwarding, configuring cgroup drivers for different runtimes like containerd, CRI-O, and Docker Engine, and overriding the sandbox image:

# Network configuration
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward = 1
EOF
sudo sysctl --system

# Enable IPv4 packet forwarding
sysctl net.ipv4.ip_forward

# Configuring systemd cgroup driver for containerd
cat <<EOF | sudo tee -a /etc/containerd/config.toml
[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
...
[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
SystemdCgroup = true
EOF
sudo systemctl restart containerd

# Overriding the sandbox (pause) image in containerd
cat <<EOF | sudo tee -a /etc/containerd/config.toml
[plugins."io.containerd.grpc.v1.cri"]
sandbox_image = "registry.k8s.io/pause:3.2"
EOF
sudo systemctl restart containerd

# Configuring cgroup driver for CRI-O
cat <<EOF | sudo tee /etc/crio/crio.conf.d/02-cgroup-manager.conf
[crio.runtime]
conmon_cgroup = "pod"
cgroup_manager = "cgroupfs"
EOF
systemctl reload crio

# Overriding the sandbox (pause) image in CRI-O
cat <<EOF | sudo tee /etc/crio/crio.conf.d/03-pause-image.conf
[crio.image]
pause_image="registry.k8s.io/pause:3.6"
EOF
systemctl reload crio

# Installing Docker Engine and cri-dockerd
# Commands for Docker Engine installation vary by Linux distribution
# Install cri-dockerd as per the documentation

# Configuring the pause image for cri-dockerd
# Use the appropriate command line argument to specify the pause image

# Additional steps may be required based on specific configurations and Kubernetes versions
```

# This script file consolidates the essential commands for configuring network settings, cgroup drivers, and sandbox images for container runtimes like containerd, CRI-O, and Docker Engine in a Kubernetes environment. Please note that specific installation steps for Docker Engine and cri-dockerd may vary based on the Linux distribution and Kubernetes setup.
